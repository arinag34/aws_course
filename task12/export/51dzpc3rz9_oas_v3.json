{
  "openapi": "3.0.1",
  "info": {
    "title": "task12_api",
    "version": "2025-04-06T09:10:14Z",
    "description": "API for user registration, authentication, table management, and reservations."
  },
  "servers": [
    {
      "url": "https://51dzpc3rz9.execute-api.eu-west-1.amazonaws.com/{basePath}",
      "variables": {
        "basePath": {
          "default": "api"
        }
      }
    }
  ],
  "paths": {
  "/reservations": {
    "get": {
      "summary": "Get all reservations",
      "description": "Retrieves a list of all reservations associated with the authenticated user.",
      "responses": {
        "200": {
          "description": "A list of reservations",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": { "type": "string", "example": "res_12345" },
                    "tableId": { "type": "string", "example": "table_abc" },
                    "userId": { "type": "string", "example": "user_xyz" },
                    "startTime": { "type": "string", "format": "date-time" },
                    "endTime": { "type": "string", "format": "date-time" },
                    "createdAt": { "type": "string", "format": "date-time" }
                  }
                }
              }
            }
          }
        },
        "401": { "description": "Unauthorized" },
        "500": { "description": "Server error" }
      },
      "security": [{ "bearerAuth": [] }],
      "x-amazon-apigateway-integration": {
        "uri": "arn:aws:apigateway:eu-west-1:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-west-1:423623856894:function:api_handler/invocations",
        "passthroughBehavior": "when_no_match",
        "httpMethod": "POST",
        "type": "aws_proxy"
      }
    },
    "post": {
      "summary": "Create a new reservation",
      "description": "Creates a new reservation for a specific table and time range.",
      "requestBody": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "tableId": { "type": "string", "example": "table_abc" },
                "startTime": { "type": "string", "format": "date-time", "example": "2025-04-07T18:00:00Z" },
                "endTime": { "type": "string", "format": "date-time", "example": "2025-04-07T20:00:00Z" }
              },
              "required": ["tableId", "startTime", "endTime"]
            }
          }
        }
      },
      "responses": {
        "201": {
          "description": "Reservation created successfully",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": { "type": "string", "example": "res_12345" },
                  "tableId": { "type": "string", "example": "table_abc" },
                  "userId": { "type": "string", "example": "user_xyz" },
                  "startTime": { "type": "string", "format": "date-time" },
                  "endTime": { "type": "string", "format": "date-time" },
                  "createdAt": { "type": "string", "format": "date-time" }
                }
              }
            }
          }
        },
        "400": { "description": "Invalid input or time conflict" },
        "401": { "description": "Unauthorized" },
        "500": { "description": "Server error" }
      },
      "security": [{ "bearerAuth": [] }],
      "x-amazon-apigateway-integration": {
        "uri": "arn:aws:apigateway:eu-west-1:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-west-1:423623856894:function:api_handler/invocations",
        "passthroughBehavior": "when_no_match",
        "httpMethod": "POST",
        "type": "aws_proxy"
      }
    }
  },
  "/tables": {
    "get": {
      "summary": "Get all tables",
      "description": "Retrieves a list of all tables associated with the authenticated user.",
      "responses": {
        "200": {
          "description": "A list of tables",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": { "type": "string", "example": "table_123" },
                    "name": { "type": "string", "example": "Budget 2024" },
                    "createdAt": { "type": "string", "format": "date-time" }
                  }
                }
              }
            }
          }
        },
        "401": { "description": "Unauthorized" },
        "500": { "description": "Server error" }
      },
      "security": [{ "bearerAuth": [] }],
      "x-amazon-apigateway-integration": {
        "uri": "arn:aws:apigateway:eu-west-1:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-west-1:423623856894:function:api_handler/invocations",
        "passthroughBehavior": "when_no_match",
        "httpMethod": "POST",
        "type": "aws_proxy"
      }
    },
    "post": {
      "summary": "Create a new table",
      "description": "Creates a new table with a given name.",
      "requestBody": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "New Budget Table"
                }
              },
              "required": ["name"]
            }
          }
        }
      },
      "responses": {
        "201": {
          "description": "Table created successfully",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": { "type": "string", "example": "table_abc123" },
                  "name": { "type": "string", "example": "New Budget Table" },
                  "createdAt": { "type": "string", "format": "date-time" }
                }
              }
            }
          }
        },
        "400": { "description": "Invalid input" },
        "401": { "description": "Unauthorized" },
        "500": { "description": "Server error" }
      },
      "security": [{ "bearerAuth": [] }],
      "x-amazon-apigateway-integration": {
        "uri": "arn:aws:apigateway:eu-west-1:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-west-1:423623856894:function:api_handler/invocations",
        "passthroughBehavior": "when_no_match",
        "httpMethod": "POST",
        "type": "aws_proxy"
      }
    }
  },
  "/signin": {
    "post": {
      "summary": "Authenticate an existing user",
      "description": "Authenticates a user and returns a token upon successful login.",
      "requestBody": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "format": "email",
                  "example": "user@example.com"
                },
                "password": {
                  "type": "string",
                  "format": "password",
                  "example": "yourpassword_123"
                }
              },
              "required": ["email", "password"]
            }
          }
        }
      },
      "responses": {
        "200": {
          "description": "Successful signin",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "token": {
                    "type": "string",
                    "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                  }
                }
              }
            }
          }
        },
        "401": {
          "description": "Invalid email or password"
        },
        "500": {
          "description": "Server error"
        }
      },
      "x-amazon-apigateway-integration": {
        "uri": "arn:aws:apigateway:eu-west-1:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-west-1:423623856894:function:api_handler/invocations",
        "passthroughBehavior": "when_no_match",
        "httpMethod": "POST",
        "type": "aws_proxy"
      }
    }
  },
  "/signup": {
    "post": {
      "summary": "Register a new user",
      "description": "Creates a new user account using the provided credentials.",
      "requestBody": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "format": "email",
                  "example": "user@example.com"
                },
                "password": {
                  "type": "string",
                  "format": "password",
                  "example": "yourpassword_123"
                }
              },
              "required": ["email", "password"]
            }
          }
        }
      },
      "responses": {
        "200": {
          "description": "Successful signup",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Empty"
              }
            }
          }
        },
        "400": {
          "description": "Invalid input"
        },
        "500": {
          "description": "Server error"
        }
      },
      "x-amazon-apigateway-integration": {
        "uri": "arn:aws:apigateway:eu-west-1:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-west-1:423623856894:function:api_handler/invocations",
        "passthroughBehavior": "when_no_match",
        "httpMethod": "POST",
        "type": "aws_proxy"
      }
    }
  },
  "/tables/{tableId}": {
    "get": {
      "summary": "Get table by ID",
      "description": "Retrieves detailed information about a specific table.",
      "parameters": [
        {
          "name": "tableId",
          "in": "path",
          "required": true,
          "description": "The ID of the table to retrieve",
          "schema": {
            "type": "string",
            "example": "table_abc123"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "Table details retrieved successfully",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": { "type": "string", "example": "table_abc123" },
                  "number": { "type": "integer", "example": 7 },
                  "seats": { "type": "integer", "example": 4 },
                  "location": { "type": "string", "example": "Window" },
                  "status": { "type": "string", "example": "available" }
                }
              }
            }
          }
        },
        "404": { "description": "Table not found" },
        "500": { "description": "Server error" }
      },
      "security": [{ "bearerAuth": [] }],
      "x-amazon-apigateway-integration": {
        "uri": "arn:aws:apigateway:eu-west-1:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-west-1:423623856894:function:api_handler/invocations",
        "passthroughBehavior": "when_no_match",
        "httpMethod": "POST",
        "type": "aws_proxy"
      }
    }
  }
},
  "components": {
    "schemas": {
      "Empty": {
        "title": "Empty Schema",
        "type": "object"
      }
    },
    "securitySchemes": {
      "authorizer": {
        "type": "apiKey",
        "name": "Authorization",
        "in": "header",
        "x-amazon-apigateway-authtype": "cognito_user_pools",
        "x-amazon-apigateway-authorizer": {
          "x-syndicate-cognito-userpool-names": ["${booking_userpool}"],
          "type": "cognito_user_pools"
        }
      }
    }
  },
  "x-syndicate-openapi-tags": {
    "run_id": "JAP-12",
    "run_type": "stm",
    "type": "user",
    "user_id": "48eab0fb"
  }
}